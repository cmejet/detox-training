workflows:
    ios-workflow:
        name: iOS Workflow
        environment:
            vars:
                XCODE_WORKSPACE: "detoxer.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "detoxer" # <-- Put the name of your Xcode scheme here
                # Automatic Code Signing 
                # https://docs.codemagic.io/yaml/distribution/
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: 5a451239-51eb-10b6-bfcc-60e61ddab13c # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: LY55E1G322 # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...) # <-- Put your App Store Connect Private Key here
                CERTIFICATE_PRIVATE_KEY: Encrypted(...) # <-- Put your Certificate Private key here
            node: latest
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true        
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install detox dependencies
              script: |
                brew tap wix/brew
                brew install applesimutils
            - name: Install detox-cli
              script: |
                npm install -g detox-cli
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: 
              script: |
                # update your bundle id below!
                app-store-connect fetch-signing-files "io.codemagic.detoxer" --type IOS_APP_STORE --create 
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                agvtool new-version -all $(($BUILD_NUMBER + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox build -c ios.sim.release -l verbose
            - name: Test with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox test -c ios.sim.release -l verbose
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM 
        publishing:
            email:
                recipients:
                    - user1@example.com
                    - user2@example.com
                notify:
                  success: true
                  failure: false  
            app_store_connect:                 
              apple_id: yourAppleId@example.com  # <- Put your Apple Id here
              password: Encrypted(...) # <-- Put your Encrypted App Specific Password here (use the Codemagic Webapp to do this). For more information visit: https://support.apple.com/en-us/HT204397
    android-workflow:
        name: Android Workflow
        environment:
            vars:
                # Android Keystore environment variables
                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here  
            node: latest
        triggering:
            events:
                - push
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install detox dependencies
              script: |
                brew tap wix/brew
            - name: Install detox-cli
              script: |
                npm install -g detox-cli
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF
            - name: Build with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox build -c android.emu.release -l verbose
            - name: Test with Detox
              script: |
                #!/bin/sh
                set -e
                set -x
                detox test -c android.emu.release -l verbose
            - name: Build Android release
              script: |
                cd android
                ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            email:
                recipients:
                    - user1@example.com
                    - user2@example.com
            google_play:                          # For publishing your Android app to Google Play
                credentials: Encrypted(...)       # <-- Put your Encrypted JSON key file for Google Play service account here
                track: alpha                      # Name of the track: internal, alpha, beta, production